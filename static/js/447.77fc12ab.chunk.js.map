{"version":3,"file":"static/js/447.77fc12ab.chunk.js","mappings":"0KACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCQpMA,EAAc,SAACC,GACxB,IAAOC,EAAYD,EAAZC,KAEDC,EAAO,YAFMF,EAANG,GAGb,OACI,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,OCNnBM,EAAU,SAACP,GACpB,IAAOQ,EAAWR,EAAXQ,QACP,OAAO,gBAAKJ,UAAWC,EAAhB,SAA4BG,K,uCCInCC,GAAcC,EAAAA,EAAAA,GAAU,IAmDtBC,GAAsBC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,wBAA/BD,EAduC,SAACZ,GAChE,OACI,kBAAMc,SAAUd,EAAMe,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOf,KAAM,iBAAkBgB,YAAa,4EAAiBC,UAAWC,EAAAA,GAChEC,SAAU,CAACC,EAAAA,EAAUZ,QAEjC,0BACI,6C,8BC7BhB,GAAea,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAhBoB,SAACC,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACC,GACxB,MAAO,CACHC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,IAAcD,SAQ/BE,EAAAA,EAFJ,EDdmD,SAAC,GAK9C,IAHEH,EAGH,EAHGA,YACAF,EAEH,EAFGA,YAQJ,OACI,iBAAKrB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKoB,EAAYM,QAAQC,KAAI,SAAAC,GACrB,OAAO,SAAClC,EAAD,CAAyBE,KAAMgC,EAAGhC,KAAME,GAAI8B,EAAG9B,IAA7B8B,EAAG9B,UAKpC,iBAAKC,UAAWC,EAAhB,UACKoB,EAAYjB,QAAQwB,KAAI,SAAAC,GACrB,OAAO,SAAC1B,EAAD,CAAqBC,QAASyB,EAAGzB,QAASL,GAAI8B,EAAG9B,IAAnC8B,EAAG9B,QAE5B,SAACQ,EAAD,CAAqBG,SAjBhB,SAACoB,GACdP,EAAYO,EAASN","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"dialog\":\"Dialogs_dialog__htSTl\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import React from 'react'\nimport s from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\ntype DialogsItemsProps = {\n    name: string\n    id: string\n}\n\nexport const DialogItems = (props: DialogsItemsProps) => {\n    const {name, id} = props\n\n    const path = '/dialogs/' + id\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path}>{name}</NavLink>\n        </div>\n    )\n\n}\n","import React from 'react'\nimport s from './../Dialogs.module.css'\n\n\ntype MessageType = {\n    message: string\n    id: string\n}\n\nexport const Message = (props: MessageType) => {\n    const {message} = props\n    return <div className={s.message}>{message}</div>\n\n}\n","import React from 'react'\nimport s from './Dialogs.module.css'\nimport {DialogItems} from \"./DialogItems/DialogItems\";\nimport {Message} from \"./Message/Message\";\nimport {initialStateMessageType} from \"../../redux/dialogs-reducer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLength, required} from \"../../utils/validators/validators\";\n\n\ntype DialogsPropsType = {\n    sendMessage: (newMessageBody: string) => void\n    dialogsPage: initialStateMessageType\n}\n\nlet maxLength50 = maxLength(50)\n\nexport const Dialogs: React.FC<DialogsPropsType> = (\n    {\n        sendMessage,\n        dialogsPage\n    }\n) => {\n\n    const onSubmit = (FormData: DataFormType) => {\n        sendMessage(FormData.newMessageBody)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsPage.dialogs.map(el => {\n                    return <DialogItems key={el.id} name={el.name} id={el.id}/>\n                })}\n\n\n            </div>\n            <div className={s.messages}>\n                {dialogsPage.message.map(el => {\n                    return <Message key={el.id} message={el.message} id={el.id}/>\n                })}\n                <AddMessageReduxForm onSubmit={onSubmit}/>\n            </div>\n\n        </div>\n    )\n}\n\ntype DataFormType = {\n    newMessageBody: string\n}\n\nconst AddMessageForm : React.FC<InjectedFormProps<DataFormType>> = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name={'newMessageBody'} placeholder={'Введите текст'} component={Textarea}\n                        validate={[required, maxLength50]}></Field>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageReduxForm = reduxForm<DataFormType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react'\nimport {initialStateMessageType, SendMessageAC} from \"../../redux/dialogs-reducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {compose, Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\n\ntype mapStateToPropsType = {\n    dialogsPage: initialStateMessageType\n}\n\ntype mapDispatchToPropsType = {\n    sendMessage: (newMessageBody: string) => void\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        sendMessage: (newMessageBody: string) => {\n            dispatch(SendMessageAC(newMessageBody))\n        }\n    }\n}\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)"],"names":["DialogItems","props","name","path","id","className","s","to","Message","message","maxLength50","maxLength","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","compose","connect","state","dialogsPage","dispatch","sendMessage","newMessageBody","SendMessageAC","withAuthRedirect","dialogs","map","el","FormData"],"sourceRoot":""}