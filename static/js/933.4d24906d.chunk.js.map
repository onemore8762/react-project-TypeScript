{"version":3,"file":"static/js/933.4d24906d.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","../node_modules/antd/es/descriptions/Item.js","../node_modules/antd/es/descriptions/Cell.js","../node_modules/antd/es/descriptions/Row.js","../node_modules/antd/es/descriptions/style/index.js","../node_modules/antd/es/descriptions/index.js","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Posts/Posts.module.css?b7f9","components/Profile/MyPosts/Posts/Posts.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__xNpDF\"};","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nexport const ProfileStatusWithHooks: React.FC<PropsType> = ({status, updateStatus}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [stateStatus, setStatus] = useState(status)\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    },[status])\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActiveEditMode = () => {\r\n        setEditMode(false)\r\n        updateStatus(stateStatus)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const keyDown = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            deActiveEditMode()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activeEditMode}>{status || \"Not status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onKeyDown={keyDown} onChange={onStatusChange} autoFocus={true} onBlur={deActiveEditMode}\r\n                           value={stateStatus}></input>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n","const DescriptionsItem = _ref => {\n  let {\n    children\n  } = _ref;\n  return children;\n};\nexport default DescriptionsItem;","import classNames from 'classnames';\nimport * as React from 'react';\nfunction notEmpty(val) {\n  return val !== undefined && val !== null;\n}\nconst Cell = _ref => {\n  let {\n    itemPrefixCls,\n    component,\n    span,\n    className,\n    style,\n    labelStyle,\n    contentStyle,\n    bordered,\n    label,\n    content,\n    colon\n  } = _ref;\n  const Component = component;\n  if (bordered) {\n    return /*#__PURE__*/React.createElement(Component, {\n      className: classNames({\n        [`${itemPrefixCls}-item-label`]: notEmpty(label),\n        [`${itemPrefixCls}-item-content`]: notEmpty(content)\n      }, className),\n      style: style,\n      colSpan: span\n    }, notEmpty(label) && /*#__PURE__*/React.createElement(\"span\", {\n      style: labelStyle\n    }, label), notEmpty(content) && /*#__PURE__*/React.createElement(\"span\", {\n      style: contentStyle\n    }, content));\n  }\n  return /*#__PURE__*/React.createElement(Component, {\n    className: classNames(`${itemPrefixCls}-item`, className),\n    style: style,\n    colSpan: span\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${itemPrefixCls}-item-container`\n  }, (label || label === 0) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-label`, {\n      [`${itemPrefixCls}-item-no-colon`]: !colon\n    }),\n    style: labelStyle\n  }, label), (content || content === 0) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-content`),\n    style: contentStyle\n  }, content)));\n};\nexport default Cell;","import * as React from 'react';\nimport { DescriptionsContext } from '.';\nimport Cell from './Cell';\nfunction renderCells(items, _ref, _ref2) {\n  let {\n    colon,\n    prefixCls,\n    bordered\n  } = _ref;\n  let {\n    component,\n    type,\n    showLabel,\n    showContent,\n    labelStyle: rootLabelStyle,\n    contentStyle: rootContentStyle\n  } = _ref2;\n  return items.map((_ref3, index) => {\n    let {\n      props: {\n        label,\n        children,\n        prefixCls: itemPrefixCls = prefixCls,\n        className,\n        style,\n        labelStyle,\n        contentStyle,\n        span = 1\n      },\n      key\n    } = _ref3;\n    if (typeof component === 'string') {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: `${type}-${key || index}`,\n        className: className,\n        style: style,\n        labelStyle: Object.assign(Object.assign({}, rootLabelStyle), labelStyle),\n        contentStyle: Object.assign(Object.assign({}, rootContentStyle), contentStyle),\n        span: span,\n        colon: colon,\n        component: component,\n        itemPrefixCls: itemPrefixCls,\n        bordered: bordered,\n        label: showLabel ? label : null,\n        content: showContent ? children : null\n      });\n    }\n    return [/*#__PURE__*/React.createElement(Cell, {\n      key: `label-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootLabelStyle), style), labelStyle),\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }), /*#__PURE__*/React.createElement(Cell, {\n      key: `content-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootContentStyle), style), contentStyle),\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\nconst Row = props => {\n  const descContext = React.useContext(DescriptionsContext);\n  const {\n    prefixCls,\n    vertical,\n    row,\n    index,\n    bordered\n  } = props;\n  if (vertical) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      key: `label-${index}`,\n      className: `${prefixCls}-row`\n    }, renderCells(row, props, Object.assign({\n      component: 'th',\n      type: 'label',\n      showLabel: true\n    }, descContext))), /*#__PURE__*/React.createElement(\"tr\", {\n      key: `content-${index}`,\n      className: `${prefixCls}-row`\n    }, renderCells(row, props, Object.assign({\n      component: 'td',\n      type: 'content',\n      showContent: true\n    }, descContext))));\n  }\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: `${prefixCls}-row`\n  }, renderCells(row, props, Object.assign({\n    component: bordered ? ['th', 'td'] : 'td',\n    type: 'item',\n    showLabel: true,\n    showContent: true\n  }, descContext)));\n};\nexport default Row;","import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent, textEllipsis } from '../../style';\nconst genBorderedStyle = token => {\n  const {\n    componentCls,\n    descriptionsSmallPadding,\n    descriptionsDefaultPadding,\n    descriptionsMiddlePadding,\n    descriptionsBg\n  } = token;\n  return {\n    [`&${componentCls}-bordered`]: {\n      [`${componentCls}-view`]: {\n        border: `${token.lineWidth}px ${token.lineType} ${token.colorSplit}`,\n        '> table': {\n          tableLayout: 'auto',\n          borderCollapse: 'collapse'\n        }\n      },\n      [`${componentCls}-item-label, ${componentCls}-item-content`]: {\n        padding: descriptionsDefaultPadding,\n        borderInlineEnd: `${token.lineWidth}px ${token.lineType} ${token.colorSplit}`,\n        '&:last-child': {\n          borderInlineEnd: 'none'\n        }\n      },\n      [`${componentCls}-item-label`]: {\n        backgroundColor: descriptionsBg,\n        '&::after': {\n          display: 'none'\n        }\n      },\n      [`${componentCls}-row`]: {\n        borderBottom: `${token.lineWidth}px ${token.lineType} ${token.colorSplit}`,\n        '&:last-child': {\n          borderBottom: 'none'\n        }\n      },\n      [`&${componentCls}-middle`]: {\n        [`${componentCls}-item-label, ${componentCls}-item-content`]: {\n          padding: descriptionsMiddlePadding\n        }\n      },\n      [`&${componentCls}-small`]: {\n        [`${componentCls}-item-label, ${componentCls}-item-content`]: {\n          padding: descriptionsSmallPadding\n        }\n      }\n    }\n  };\n};\nconst genDescriptionStyles = token => {\n  const {\n    componentCls,\n    descriptionsExtraColor,\n    descriptionItemPaddingBottom,\n    descriptionsItemLabelColonMarginRight,\n    descriptionsItemLabelColonMarginLeft,\n    descriptionsTitleMarginBottom\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign({}, resetComponent(token)), genBorderedStyle(token)), {\n      [`&-rtl`]: {\n        direction: 'rtl'\n      },\n      [`${componentCls}-header`]: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: descriptionsTitleMarginBottom\n      },\n      [`${componentCls}-title`]: Object.assign(Object.assign({}, textEllipsis), {\n        flex: 'auto',\n        color: token.colorText,\n        fontWeight: token.fontWeightStrong,\n        fontSize: token.fontSizeLG,\n        lineHeight: token.lineHeightLG\n      }),\n      [`${componentCls}-extra`]: {\n        marginInlineStart: 'auto',\n        color: descriptionsExtraColor,\n        fontSize: token.fontSize\n      },\n      [`${componentCls}-view`]: {\n        width: '100%',\n        borderRadius: token.borderRadiusLG,\n        table: {\n          width: '100%',\n          tableLayout: 'fixed'\n        }\n      },\n      [`${componentCls}-row`]: {\n        '> th, > td': {\n          paddingBottom: descriptionItemPaddingBottom\n        },\n        '&:last-child': {\n          borderBottom: 'none'\n        }\n      },\n      [`${componentCls}-item-label`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        textAlign: `start`,\n        '&::after': {\n          content: '\":\"',\n          position: 'relative',\n          top: -0.5,\n          marginInline: `${descriptionsItemLabelColonMarginLeft}px ${descriptionsItemLabelColonMarginRight}px`\n        },\n        [`&${componentCls}-item-no-colon::after`]: {\n          content: '\"\"'\n        }\n      },\n      [`${componentCls}-item-no-label`]: {\n        '&::after': {\n          margin: 0,\n          content: '\"\"'\n        }\n      },\n      [`${componentCls}-item-content`]: {\n        display: 'table-cell',\n        flex: 1,\n        color: token.colorText,\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        wordBreak: 'break-word',\n        overflowWrap: 'break-word'\n      },\n      [`${componentCls}-item`]: {\n        paddingBottom: 0,\n        verticalAlign: 'top',\n        '&-container': {\n          display: 'flex',\n          [`${componentCls}-item-label`]: {\n            display: 'inline-flex',\n            alignItems: 'baseline'\n          },\n          [`${componentCls}-item-content`]: {\n            display: 'inline-flex',\n            alignItems: 'baseline'\n          }\n        }\n      },\n      '&-middle': {\n        [`${componentCls}-row`]: {\n          '> th, > td': {\n            paddingBottom: token.paddingSM\n          }\n        }\n      },\n      '&-small': {\n        [`${componentCls}-row`]: {\n          '> th, > td': {\n            paddingBottom: token.paddingXS\n          }\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Descriptions', token => {\n  const descriptionsBg = token.colorFillAlter;\n  const descriptionsTitleMarginBottom = token.fontSizeSM * token.lineHeightSM;\n  const descriptionsExtraColor = token.colorText;\n  const descriptionsSmallPadding = `${token.paddingXS}px ${token.padding}px`;\n  const descriptionsDefaultPadding = `${token.padding}px ${token.paddingLG}px`;\n  const descriptionsMiddlePadding = `${token.paddingSM}px ${token.paddingLG}px`;\n  const descriptionItemPaddingBottom = token.padding;\n  const descriptionsItemLabelColonMarginRight = token.marginXS;\n  const descriptionsItemLabelColonMarginLeft = token.marginXXS / 2;\n  const descriptionToken = mergeToken(token, {\n    descriptionsBg,\n    descriptionsTitleMarginBottom,\n    descriptionsExtraColor,\n    descriptionItemPaddingBottom,\n    descriptionsSmallPadding,\n    descriptionsDefaultPadding,\n    descriptionsMiddlePadding,\n    descriptionsItemLabelColonMarginRight,\n    descriptionsItemLabelColonMarginLeft\n  });\n  return [genDescriptionStyles(descriptionToken)];\n});","/* eslint-disable react/no-array-index-key */\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { cloneElement } from '../_util/reactNode';\nimport useResponsiveObserver, { responsiveArray } from '../_util/responsiveObserver';\nimport warning from '../_util/warning';\nimport DescriptionsItem from './Item';\nimport Row from './Row';\nimport useStyle from './style';\nexport const DescriptionsContext = /*#__PURE__*/React.createContext({});\nconst DEFAULT_COLUMN_MAP = {\n  xxl: 3,\n  xl: 3,\n  lg: 3,\n  md: 3,\n  sm: 2,\n  xs: 1\n};\nfunction getColumn(column, screens) {\n  if (typeof column === 'number') {\n    return column;\n  }\n  if (typeof column === 'object') {\n    for (let i = 0; i < responsiveArray.length; i++) {\n      const breakpoint = responsiveArray[i];\n      if (screens[breakpoint] && column[breakpoint] !== undefined) {\n        return column[breakpoint] || DEFAULT_COLUMN_MAP[breakpoint];\n      }\n    }\n  }\n  return 3;\n}\nfunction getFilledItem(node, span, rowRestCol) {\n  let clone = node;\n  if (span === undefined || span > rowRestCol) {\n    clone = cloneElement(node, {\n      span: rowRestCol\n    });\n    process.env.NODE_ENV !== \"production\" ? warning(span === undefined, 'Descriptions', 'Sum of column `span` in a line not match `column` of Descriptions.') : void 0;\n  }\n  return clone;\n}\nfunction getRows(children, column) {\n  const childNodes = toArray(children).filter(n => n);\n  const rows = [];\n  let tmpRow = [];\n  let rowRestCol = column;\n  childNodes.forEach((node, index) => {\n    var _a;\n    const span = (_a = node.props) === null || _a === void 0 ? void 0 : _a.span;\n    const mergedSpan = span || 1;\n    // Additional handle last one\n    if (index === childNodes.length - 1) {\n      tmpRow.push(getFilledItem(node, span, rowRestCol));\n      rows.push(tmpRow);\n      return;\n    }\n    if (mergedSpan < rowRestCol) {\n      rowRestCol -= mergedSpan;\n      tmpRow.push(node);\n    } else {\n      tmpRow.push(getFilledItem(node, mergedSpan, rowRestCol));\n      rows.push(tmpRow);\n      rowRestCol = column;\n      tmpRow = [];\n    }\n  });\n  return rows;\n}\nfunction Descriptions(_ref) {\n  let {\n    prefixCls: customizePrefixCls,\n    title,\n    extra,\n    column = DEFAULT_COLUMN_MAP,\n    colon = true,\n    bordered,\n    layout,\n    children,\n    className,\n    style,\n    size,\n    labelStyle,\n    contentStyle\n  } = _ref;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n  const [screens, setScreens] = React.useState({});\n  const mergedColumn = getColumn(column, screens);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const responsiveObserver = useResponsiveObserver();\n  // Responsive\n  React.useEffect(() => {\n    const token = responsiveObserver.subscribe(newScreens => {\n      if (typeof column !== 'object') {\n        return;\n      }\n      setScreens(newScreens);\n    });\n    return () => {\n      responsiveObserver.unsubscribe(token);\n    };\n  }, []);\n  // Children\n  const rows = getRows(children, mergedColumn);\n  const contextValue = React.useMemo(() => ({\n    labelStyle,\n    contentStyle\n  }), [labelStyle, contentStyle]);\n  return wrapSSR( /*#__PURE__*/React.createElement(DescriptionsContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, {\n      [`${prefixCls}-${size}`]: size && size !== 'default',\n      [`${prefixCls}-bordered`]: !!bordered,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, className, hashId),\n    style: style\n  }, (title || extra) && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-header`\n  }, title && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-title`\n  }, title), extra && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-extra`\n  }, extra)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-view`\n  }, /*#__PURE__*/React.createElement(\"table\", null, /*#__PURE__*/React.createElement(\"tbody\", null, rows.map((row, index) => /*#__PURE__*/React.createElement(Row, {\n    key: index,\n    index: index,\n    colon: colon,\n    prefixCls: prefixCls,\n    vertical: layout === 'vertical',\n    bordered: bordered,\n    row: row\n  }))))))));\n}\nif (process.env.NODE_ENV !== 'production') {\n  Descriptions.displayName = 'Descriptions';\n}\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;","import React, {useState} from \"react\";\r\nimport {Form, Formik} from \"formik\";\r\nimport {saveProfile} from \"../../../redux/profile-reducer\";\r\nimport {Button, Descriptions, Input} from \"antd\";\r\nimport {useAppSelector} from \"../../../common/hooks/useAppSelector\";\r\nimport {useAppDispatch} from \"../../../common/hooks/useAppDispatch\";\r\n\r\n\r\nexport const ProfileFormik = ({setEditMode}: any) => {\r\n    const [error, setError] = useState('')\r\n    const dispatch = useAppDispatch()\r\n    const profile = useAppSelector(state => state.profilePage.profile)\r\n    return <Formik\r\n        initialValues={profile}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true)\r\n            dispatch(saveProfile(profile.userId, values))\r\n                .then(() => {\r\n                    setEditMode()\r\n                })\r\n                .catch((error) => {\r\n                    setError(error)\r\n                })\r\n                .finally(() => {\r\n                    actions.setSubmitting(false)\r\n                })\r\n\r\n        }}\r\n    >{\r\n        ({isSubmitting, getFieldProps,setFieldValue, submitForm}) => {\r\n            return <Form>\r\n                <span style={{color: '#ff0000', backgroundColor: '#fff'}}>\r\n                    {error && error}\r\n                </span> <br/>\r\n                <Button onClick={submitForm} disabled={isSubmitting}>save</Button>\r\n                <Descriptions style={{backgroundColor: '#001529'}}\r\n                              labelStyle={{color:'#ffffff', fontSize:'20px'}}\r\n                              contentStyle={{color:'#ffffff', fontSize:'20px'}}>\r\n                    <Descriptions.Item label=\"Full name\" span={3} style={{color: '#ffffff'}}>\r\n                        <Input id=\"fullName\"\r\n                               name=\"fullName\"\r\n                               placeholder=\"Full name\"\r\n                               value={getFieldProps('fullName').value}\r\n                               onChange={(value) =>setFieldValue(\"fullName\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Looking for a job\" span={3} style={{color: '#ffffff'}}>\r\n                        <Input id=\"lookingForAJob\"\r\n                               name=\"lookingForAJob\"\r\n                               type={'checkbox'}\r\n                               value={getFieldProps('lookingForAJob').value}\r\n                               onChange={(value) =>setFieldValue(\"lookingForAJob\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"My professional skills\" span={3} style={{color: '#ffffff'}}>\r\n                        <Input id=\"lookingForAJobDescription\"\r\n                               name=\"lookingForAJobDescription\"\r\n                               placeholder=\"Skills\"\r\n                               value={getFieldProps('lookingForAJobDescription').value}\r\n                               onChange={(value) =>setFieldValue(\"lookingForAJobDescription\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"About me\" span={3} style={{color: '#ffffff'}}>\r\n                        <Input id=\"aboutMe\"\r\n                               name=\"aboutMe\"\r\n                               placeholder=\"About Me\"\r\n                               value={getFieldProps('aboutMe').value}\r\n                               onChange={(value) =>setFieldValue(\"aboutMe\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item span={3} style={{color: '#ffffff'}}>\r\n                        facebook:\r\n                        <Input id=\"facebook\"\r\n                               name=\"facebook\"\r\n                               placeholder=\"Facebook\"\r\n                               value={getFieldProps('contacts.facebook').value}\r\n                               onChange={(value) =>setFieldValue(\"contacts.facebook\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item span={3} style={{color: '#ffffff'}}>\r\n                        github:\r\n                        <Input id=\"github \"\r\n                               name=\"github \"\r\n                               placeholder=\"github\"\r\n                               value={getFieldProps('contacts.github').value}\r\n                               onChange={(value) =>setFieldValue(\"contacts.github \", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item span={3} style={{color: '#ffffff'}}>\r\n                        vk:\r\n                        <Input id=\"vk\"\r\n                               name=\"vk\"\r\n                               placeholder=\"Vk\"\r\n                               value={getFieldProps('contacts.vk').value}\r\n                               onChange={(value) =>setFieldValue(\"contacts.vk\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item span={3} style={{color: '#ffffff'}}>\r\n                        twitter:\r\n                        <Input id=\"twitter \"\r\n                               name=\"twitter \"\r\n                               placeholder=\"Twitter\"\r\n                               value={getFieldProps('contacts.twitter').value}\r\n                               onChange={(value) =>setFieldValue(\"contacts.twitter\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item span={3} style={{color: '#ffffff'}}>\r\n                        instagram:\r\n                        <Input id=\"instagram\"\r\n                               name=\"instagram\"\r\n                               placeholder=\"Instagram \"\r\n                               value={getFieldProps('contacts.instagram').value}\r\n                               onChange={(value) =>setFieldValue(\"contacts.instagram\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item span={3} style={{color: '#ffffff'}}>\r\n                        website:\r\n                        <Input id=\"website\"\r\n                               name=\"website\"\r\n                               placeholder=\"Website \"\r\n                               value={getFieldProps('contacts.website').value}\r\n                               onChange={(value) =>setFieldValue(\"contacts.website\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item span={3} style={{color: '#ffffff'}}>\r\n                        youtube:\r\n                        <Input id=\"youtube\"\r\n                               name=\"youtube\"\r\n                               placeholder=\"Youtube\"\r\n                               value={getFieldProps('contacts.youtube').value}\r\n                               onChange={(value) =>setFieldValue(\"contacts.youtube\", value.target.value)}\r\n                               style={{width: '300px'}}\r\n                        />\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            </Form>\r\n        }\r\n\r\n    }\r\n\r\n    </Formik>\r\n}\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {PreloaderCustom} from \"../../../common/PreloaderCustom/PreloaderCustom\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\nimport {ProfileFormik} from \"./ProfileDataForm\";\r\nimport {ProfileType} from \"../../../common/api/profile-api\";\r\nimport {Avatar, Button, Descriptions, Dropdown, MenuProps} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport background from './../../../assets/images/background.jpg'\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean;\r\n    savePhoto: (photoFile: any) => void\r\n    saveProfile: (userId: string, FormData: any) => void\r\n}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoType) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    if (!props.profile) {\r\n        return <PreloaderCustom/>\r\n    }\r\n\r\n    const onchangePhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.files?.length) {\r\n            props.savePhoto(e.currentTarget.files[0])\r\n        }\r\n    }\r\n\r\n    const items: MenuProps['items'] = [\r\n        {\r\n            key: '1',\r\n            label: (\r\n                <input type={'file'} onChange={onchangePhoto}/>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div style={{position:'relative'}}>\r\n            <img src={background} style={{ width: '100%', height: 225, borderRadius: 10}} alt={'background'}/>\r\n            <div style={{backgroundColor: '#00101f', width: '100%', height: 125, marginTop: -5, borderBottomLeftRadius: 10,borderBottomRightRadius: 10, position: 'relative'}}>\r\n                {props.isOwner && <Button onClick={()=> setEditMode(true)} style={{position: 'absolute', top: -15,right: 25}}>Edit Profile</Button>}\r\n            </div>\r\n                <div style={{position: 'absolute', top: '100px', display: 'flex', alignItems: 'flex-end', flexWrap: 'wrap'}}>\r\n                    {props.isOwner ?\r\n                        <Dropdown menu={{items}}>\r\n                            <Avatar size={240} src={props.profile.photos.large} icon={<UserOutlined />} style={{minWidth: 240}}/>\r\n                        </Dropdown>\r\n                        : <Avatar size={240} src={props.profile.photos.large} icon={<UserOutlined />}/>\r\n                    }\r\n                  <div>\r\n                      <h2 style={{verticalAlign: 'center'}}>{props.profile.fullName}</h2>\r\n                      {props.isOwner && <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>}\r\n                      {!props.isOwner && props.status}\r\n                  </div>\r\n                </div>\r\n\r\n\r\n            <div className={s.descriptionBlock} style={{display: 'flex', justifyContent: 'center', flexDirection: 'column', margin: '0 50px'}}>\r\n                {!editMode && <ProfileData profile={props.profile}\r\n                />\r\n                }\r\n                {editMode && <ProfileFormik profile={props.profile}\r\n                                            setEditMode={() => setEditMode(false)}\r\n\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n}\r\n\r\nconst ProfileData = (props: ProfileDataType) => {\r\n    return <div >\r\n        <Descriptions style={{backgroundColor: '#001529'}}\r\n                      labelStyle={{color:'#ffffff', fontSize:'20px', fontWeight: '700'}}\r\n                      contentStyle={{color:'#ffffff', fontSize:'20px'}}>\r\n            <Descriptions.Item label=\"Full name\" span={3} style={{color: '#ffffff'}}>\r\n                {props.profile.fullName}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Looking for a job\" span={3} style={{color: '#ffffff'}}>\r\n                {props.profile.lookingForAJob ? 'yes' : 'no'}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"My professional skills\" span={3} style={{color: '#ffffff'}}>\r\n                {props.profile.lookingForAJobDescription}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"About me\" span={3} style={{color: '#ffffff'}}>\r\n                {props.profile.aboutMe}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Contacts\" span={3} style={{color: '#ffffff'}}>\r\n                facebook: {props.profile.contacts.facebook}\r\n                <br/>\r\n                github: {props.profile.contacts.github}\r\n                <br/>\r\n                vk: {props.profile.contacts.vk}\r\n                <br/>\r\n                twitter: {props.profile.contacts.twitter}\r\n                <br/>\r\n                instagram: {props.profile.contacts.instagram}\r\n                <br/>\r\n                website: {props.profile.contacts.website}\r\n                <br/>\r\n                youtube: {props.profile.contacts.youtube}\r\n                <br/>\r\n            </Descriptions.Item>\r\n        </Descriptions>\r\n\r\n    </div>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__-7KGu\",\"posts\":\"MyPosts_posts__MFE77\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Posts_item__8r+6o\"};","import React from 'react';\r\nimport s from './Posts.module.css';\r\n\r\ntype PostsPropsType = {\r\n    message: string\r\n    like: number\r\n\r\n}\r\nexport const Posts: React.FC<PostsPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://i.pinimg.com/originals/9c/77/46/9c7746225873e02d83b9315501b8dd2f.jpg\" alt={'photo'}/>\r\n            {props.message}\r\n\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Posts} from \"./Posts/Posts\";\r\n\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport {addPostAC} from \"../../../redux/profile-reducer\";\r\nimport {Form, Formik} from \"formik\";\r\nimport {Button} from \"antd\";\r\nimport {useAppSelector} from \"../../../common/hooks/useAppSelector\";\r\nimport {useAppDispatch} from \"../../../common/hooks/useAppDispatch\";\r\nimport {selectProfile} from \"../../../common/selectors/selectors\";\r\n\r\n\r\ntype FormDataType = {\r\n    newPostText: string,\r\n}\r\n\r\n\r\nexport const MyPosts: React.FC<{ isOwner: boolean }> = React.memo(({isOwner}) => {\r\n        const posts = useAppSelector(selectProfile.Posts)\r\n        const dispatch = useAppDispatch()\r\n        const profile = useAppSelector(selectProfile.Profile)\r\n\r\n\r\n        const onSubmit = (FormData: FormDataType) => {\r\n            dispatch(addPostAC(FormData.newPostText))\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h2>{isOwner ? 'MyPosts' : `${profile.fullName} posts`}</h2>\r\n                {isOwner && <Formik\r\n                    initialValues={{newPostText: ''}}\r\n                    onSubmit={(values, formikHelpers) => {\r\n                        onSubmit(values)\r\n                        formikHelpers.setFieldValue('newPostText', '')\r\n                    }}\r\n                >\r\n                    {({setFieldValue, getFieldProps, submitForm}) => (\r\n                        <Form>\r\n                            <TextArea\r\n                                value={getFieldProps('newPostText').value}\r\n                                onChange={(e) => setFieldValue('newPostText', e.target.value)}\r\n                                placeholder=\"Controlled autosize\"\r\n                                autoSize={{minRows: 3, maxRows: 5}}\r\n                            />\r\n                            <Button onClick={submitForm} style={{marginTop: 15}}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n\r\n                }\r\n                <div className={s.posts}>\r\n                    {posts.map(el => {\r\n                        return <Posts key={el.id} message={el.message} like={el.likesCount}/>\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n)\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\n\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {Button} from \"antd\";\r\nimport {PreloaderCustom} from \"../../common/PreloaderCustom/PreloaderCustom\";\r\nimport {useAppSelector} from \"../../common/hooks/useAppSelector\";\r\nimport {useAppDispatch} from \"../../common/hooks/useAppDispatch\";\r\nimport {selectAuth, selectProfile} from \"../../common/selectors/selectors\";\r\n\r\nconst Profile = () => {\r\n    const profile = useAppSelector(selectProfile.Profile)\r\n    const isLoading = useAppSelector(selectProfile.IsLoading)\r\n    const status = useAppSelector(selectProfile.Status)\r\n    const authorizedUserId = useAppSelector(selectAuth.UserId)\r\n    const navigate = useNavigate()\r\n    const dispatch = useAppDispatch()\r\n    const params = useParams()\r\n\r\n    const updateStatusCallBack = (status: string) => {\r\n        dispatch(updateStatus(status))\r\n    }\r\n    const savePhotoCallBack = (photoFile: any) => {\r\n        dispatch(savePhoto(photoFile))\r\n    }\r\n    const saveProfileCallBack = (userId: string, FormData: any) => {\r\n        dispatch(saveProfile(userId, FormData))\r\n    }\r\n\r\n    let userId = params.userId\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            userId = authorizedUserId?.toString()\r\n        }\r\n        if (userId) {\r\n            dispatch(getUserProfile(userId))\r\n            dispatch(getStatus(userId))\r\n        }\r\n    }, [userId])\r\n\r\n    if (isLoading) return  <PreloaderCustom/>\r\n    return (\r\n        <div style={{position: 'relative'}}>\r\n            {userId && <Button style={{position: 'absolute', zIndex: 2}} onClick={() => navigate('/profile')}>Back to my Profile</Button>}\r\n            <ProfileInfo profile={profile}\r\n                         status={status}\r\n                         updateStatus={updateStatusCallBack}\r\n                         isOwner={!userId}\r\n                         savePhoto={savePhotoCallBack}\r\n                         saveProfile={saveProfileCallBack}\r\n            />\r\n            <MyPosts isOwner={!userId}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile\r\n"],"names":["ProfileStatusWithHooks","status","updateStatus","useState","editMode","setEditMode","stateStatus","setStatus","useEffect","deActiveEditMode","onDoubleClick","onKeyDown","e","key","onChange","currentTarget","value","autoFocus","onBlur","_ref","children","notEmpty","val","undefined","itemPrefixCls","component","span","className","style","labelStyle","contentStyle","bordered","label","content","colon","Component","React","classNames","colSpan","renderCells","items","_ref2","prefixCls","type","showLabel","showContent","rootLabelStyle","rootContentStyle","map","_ref3","index","props","Cell","Object","assign","descContext","DescriptionsContext","vertical","row","genDescriptionStyles","token","componentCls","descriptionsExtraColor","descriptionItemPaddingBottom","descriptionsItemLabelColonMarginRight","descriptionsItemLabelColonMarginLeft","descriptionsTitleMarginBottom","resetComponent","descriptionsSmallPadding","descriptionsDefaultPadding","descriptionsMiddlePadding","descriptionsBg","border","lineWidth","lineType","colorSplit","tableLayout","borderCollapse","padding","borderInlineEnd","backgroundColor","display","borderBottom","genBorderedStyle","direction","alignItems","marginBottom","textEllipsis","flex","color","colorText","fontWeight","fontWeightStrong","fontSize","fontSizeLG","lineHeight","lineHeightLG","marginInlineStart","width","borderRadius","borderRadiusLG","table","paddingBottom","textAlign","position","top","marginInline","margin","wordBreak","overflowWrap","verticalAlign","paddingSM","paddingXS","genComponentStyleHook","colorFillAlter","fontSizeSM","lineHeightSM","paddingLG","marginXS","marginXXS","descriptionToken","mergeToken","DEFAULT_COLUMN_MAP","xxl","xl","lg","md","sm","xs","getFilledItem","node","rowRestCol","clone","cloneElement","Descriptions","customizePrefixCls","title","extra","column","layout","size","ConfigContext","getPrefixCls","screens","setScreens","mergedColumn","i","responsiveArray","breakpoint","getColumn","useStyle","wrapSSR","hashId","responsiveObserver","useResponsiveObserver","subscribe","newScreens","unsubscribe","rows","childNodes","toArray","filter","n","tmpRow","forEach","_a","mergedSpan","length","push","getRows","contextValue","Provider","Row","Item","DescriptionsItem","ProfileFormik","error","setError","dispatch","useAppDispatch","profile","useAppSelector","state","profilePage","initialValues","onSubmit","values","actions","setSubmitting","saveProfile","userId","then","catch","finally","isSubmitting","getFieldProps","setFieldValue","submitForm","onClick","disabled","id","name","placeholder","target","ProfileInfo","PreloaderCustom","files","savePhoto","src","background","height","alt","marginTop","borderBottomLeftRadius","borderBottomRightRadius","isOwner","right","flexWrap","menu","photos","large","icon","UserOutlined","minWidth","fullName","s","justifyContent","flexDirection","ProfileData","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","github","vk","twitter","instagram","website","youtube","Posts","message","like","MyPosts","posts","selectProfile","newPostText","formikHelpers","FormData","addPostAC","TextArea","autoSize","minRows","maxRows","el","likesCount","isLoading","authorizedUserId","selectAuth","navigate","useNavigate","useParams","toString","getUserProfile","getStatus","zIndex","photoFile"],"sourceRoot":""}